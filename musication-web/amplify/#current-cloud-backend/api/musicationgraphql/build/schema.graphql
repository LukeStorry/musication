type Mapping {
  name: String!
  author: String!
  description: String
  mp3s: [String]!
  locations: [String]!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelMappingConnection {
  items: [Mapping]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelMappingFilterInput {
  name: ModelStringFilterInput
  author: ModelStringFilterInput
  description: ModelStringFilterInput
  mp3s: ModelStringFilterInput
  locations: ModelStringFilterInput
  and: [ModelMappingFilterInput]
  or: [ModelMappingFilterInput]
  not: ModelMappingFilterInput
}

type Query {
  getMapping(id: ID!): Mapping
  listMappings(filter: ModelMappingFilterInput, limit: Int, nextToken: String): ModelMappingConnection
}

input CreateMappingInput {
  name: String!
  author: String!
  description: String
  mp3s: [String]!
  locations: [String]!
}

input UpdateMappingInput {
  name: String
  author: String
  description: String
  mp3s: [String]
  locations: [String]
}

input DeleteMappingInput {
  id: ID
}

type Mutation {
  createMapping(input: CreateMappingInput!): Mapping
  updateMapping(input: UpdateMappingInput!): Mapping
  deleteMapping(input: DeleteMappingInput!): Mapping
}

type Subscription {
  onCreateMapping: Mapping @aws_subscribe(mutations: ["createMapping"])
  onUpdateMapping: Mapping @aws_subscribe(mutations: ["updateMapping"])
  onDeleteMapping: Mapping @aws_subscribe(mutations: ["deleteMapping"])
}
